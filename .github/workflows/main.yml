name: Unity CI/CD - [Format check, Test Runner]

on:
  push:
    branches: [ "main" ]
  pull_request: 
    branches: [ "main" ]
    
jobs:
  format:
    name: Format check üóíÔ∏è
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: "projekt/Assets"
    steps:
      - uses: actions/checkout@v3
      - name: Installing .NET...
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Installing dependencies...
        run: dotnet tool install -g csharpier
      - name: Restoring dependencies...
        run: dotnet tool restore
      - name: Running format...
        run: dotnet csharpier --check
  tests:
    name: Test runner üß™
    runs-on: ubuntu-latest
    # defaults:
    #   run: 
    #     working-directory: "projekt"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: projekt/Library
          key: Library-test-project
          restore-keys: |
            Library-test-
      - name: Running tests...
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: projekt
          githubToken: ${{ secrets.TOKEN }}
  build:
    name: Build project üèóÔ∏è
    runs-on: ubuntu-latest
    # defaults:
    #       run: 
    #         working-directory: "projekt"
    steps:
      - name: Checkouting repository...
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Caching...
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-
      - name: Building project...
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: projekt
          targetPlatform: Windows
      - name: Uploading build...
        uses: actions/upload-artifact@v3
        with:
          name: Build
          path: build
          githubToken: ${{ secrets.TOKEN }}       
