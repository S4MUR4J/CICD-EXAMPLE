name: Unity CI/CD - Main/Release PR (Format check, Test Runner)

on:
  pull_request:
    branches: [ "main", "release" ]
    
jobs:
  format:
    name: Format check üóíÔ∏è
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Installing .NET...
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x
      - name: Installing dependencies...
        run: dotnet tool install -g csharpier
      - name: Restoring dependencies...
        run: dotnet tool restore
      - name: Running format...
        run: dotnet csharpier --check "projekt/Assets"
  tests:
    needs: format
    name: Test runner üß™
    runs-on: ubuntu-latest
    steps:
      - name: Checking out...
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Caching Library...
        uses: actions/cache@v3
        with:
          path: projekt/Library
          key: Library-projekt
          restore-keys: |
            Library-
      - name: Running tests... 
        uses: game-ci/unity-test-runner@v4
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          projectPath: projekt
          testMode: editmode
          artifactsPath: editmode-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: Test results
          coverageOptions: 'generateAdditionalMetrics;generateHtmlReport;generateBadgeReport;assemblyFilters:+my.assembly.*'
      - uses: actions/upload-artifact@v3
        name: Uploading artifacts...
        if: always()
        with:
          name: Test results - artifacts
          path: ${{ steps.tests.outputs.artifactsPath }}
